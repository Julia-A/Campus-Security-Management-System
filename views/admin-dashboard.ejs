<%- include('partials/header') %>

<div class="body admin-dashboard">
  <!-- Sidebar -->
  <%- include('partials/sidebar') %>

  <!-- Main Content -->
  <div class="main dashboard-content">

    <!-- Stats Section -->
    <div class="stats-container">
      <div class="stat-card total-reports">
        <h2>Total Reports</h2>
        <p><%= totalReports %></p>
      </div>
      <div class="stat-card pending-reports">
        <h2>Pending Reports</h2>
        <p><%= pendingReports %></p>
      </div>
      <div class="stat-card resolved-reports">
        <h2>Resolved Reports</h2>
        <p><%= addressedReports %></p>
      </div>
    </div>

    <!-- Reports Per Day Chart -->
    <h2 class="section-title">Reports Per Day (Last 7 Days)</h2>
    <div class="chart-container">
      <canvas id="reportsChart"></canvas>
    </div>

    <!-- Reports Per User -->
    <h2 class="section-title">Reports Per User</h2>
    <table class="styled-table">
      <thead>
        <tr>
          <th>User Matric Number</th>
          <th>Number of Reports</th>
        </tr>
      </thead>
      <tbody>
        <% reportsByUser.forEach(userReport => { %>
          <tr>
            <td><%= userReport._id || 'N/A' %></td>
            <td><%= userReport.count %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>

    <!-- Feedback Summary -->
    <h2 class="section-title">Feedback Summary</h2>
    <div class="feedback-grid">
      <% feedbackSummary.forEach(item => { %>
        <div class="feedback-card">
          <h3><%= item._id || 'No Feedback' %></h3>
          <p><%= item.count %></p>
        </div>
      <% }) %>
    </div>

    <!-- All Reports -->
    <h2 class="section-title">All Reports</h2>
    <div class="reports-grid">
      <% reports.forEach(report => { %>
        <div class="report-card">
          <p><strong>User Matric:</strong> <%= report.userId?.matricNumber || 'N/A' %></p>
          <p><%= report.description %></p>
          <p><strong>Category:</strong> <%= report.category %></p>

          <% if (report.imageUrl) { %>
            <img src="<%= report.imageUrl %>" alt="Report Image" class="report-image">
          <% } %>

          <p class="status <%= report.status === 'Pending' ? 'pending' : 'resolved' %>">
            Status: <%= report.status %>
          </p>

          <p class="report-date"><%= report.createdAt.toLocaleString() %></p>

          <p class="deleted-status <%= report.deleted ? 'deleted' : '' %>">
            <% if (report.deleted) { %>
              ðŸš¨ Deleted on <%= report.deletedAt ? report.deletedAt.toLocaleString() : "Unknown date" %>
            <% } else { %>
              <strong>Not deleted</strong>
            <% } %>
          </p>
        </div>
      <% }) %>
    </div>
  </div>
</div>


<script>
  let reportsPerDay = [];

  try {
    reportsPerDay = <%- JSON.stringify(reportsPerDay || []) %>;
  } catch (error) {
    console.error("Error parsing reportsPerDay:", error);
    reportsPerDay = [];
  }

  console.log("Browser reportsPerDay data:", reportsPerDay);

  document.addEventListener("DOMContentLoaded", function () {
    if (!Array.isArray(reportsPerDay) || reportsPerDay.length === 0) {
      console.warn("No reports data available for the graph.");
      return;
    }

    const ctx = document.getElementById('reportsChart').getContext('2d');

    // âœ… Format dates for labels
    const labels = reportsPerDay.map(day => new Date(day._id).toLocaleDateString('en-US', {
      month: 'short',
      day: 'numeric'
    })); 

    // âœ… Ensure whole numbers for the count
    const data = reportsPerDay.map(day => Math.round(day.count));

    new Chart(ctx, {
      type: 'line',
      data: {
        labels: labels,
        datasets: [{
          label: 'Reports Per Day',
          data: data,
          borderColor: '#00bfff',
          backgroundColor: 'rgba(0, 191, 255, 0.2)',
          borderWidth: 3,
          pointRadius: 5,
          pointHoverRadius: 7,
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              precision: 0, // âœ… Ensure whole numbers
              color: "white",
            },
            grid: {
              color: "rgba(255, 255, 255, 0.2)"
            }
          },
          x: {
            ticks: {
              color: "white",
            },
            grid: {
              color: "rgba(255, 255, 255, 0.2)"
            }
          }
        },
        plugins: {
          legend: {
            labels: {
              color: "white"
            }
          }
        }
      }
    });
  });
</script>


